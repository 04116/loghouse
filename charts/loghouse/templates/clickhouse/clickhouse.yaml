---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clickhouse-server
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      component: clickhouse
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: clickhouse
    spec:
      initContainers:
      - name: chown
        image: busybox
        command:
        - chown
        - -R
        - 101:101
        - /var/lib/clickhouse
        volumeMounts:
        - name: data
          mountPath: /var/lib/clickhouse/
      containers:
      - name: clickhouse
        image: yandex/clickhouse-server:20.1
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - name: http
          containerPort: 8123
        - name: native
          containerPort: 9000
        env:
        - name: CLICKHOUSE_SERVER
          value: {{ .Values.clickhouse.server | quote }}
        - name: CLICKHOUSE_PORT
          value: {{ .Values.clickhouse.port | quote }}
        - name: CLICKHOUSE_DB
          value: {{ .Values.clickhouse.db | quote }}
        - name: K8S_LOGS_TABLE
          value: {{ .Values.clickhouse.table | quote }}
        envFrom:
        - secretRef:
            name: clickhouse
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 30
          tcpSocket:
            port: 9000
        readinessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 5
          tcpSocket:
            port: 9000
        {{ include "includeByName" (dict "root" .Values.clickhouse "name" "resources") | indent 8 | trim }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/clickhouse/
        - name: config-volume
          mountPath: /etc/clickhouse-server/
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d/
        securityContext:
          runAsUser: 101
          fsGroup: 101
      volumes:
{{- if .Values.storage.hostpath }}
      - name: data
        hostPath:
          path: {{ .Values.storage.hostpath }}
{{- end }}
{{- if .Values.storage.emptyDir }}
      - name: data
        emptyDir:
          sizeLimit: "0"
{{- end }}
      - name: config-volume
        configMap:
          name: clickhouse-config
      - name: initdb
        configMap:
          name: clickhouse-initdb
      {{ include "includeByName" (dict "root" .Values.clickhouse "name" "nodeSelector") | indent 6 | trim }}
      {{ include "includeByName" (dict "root" .Values.clickhouse "name" "tolerations") | indent 6 | trim }}
{{- if .Values.storage.pvc }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - {{ .Values.storage.pvc.accessMode }}
      storageClassName: {{ .Values.storage.pvc.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.storage.pvc.size }}
{{- end }}
